# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 - master

pr: none

variables:
  TF_VAR_PROJECTIDENTITY: AzDoLive  
  TF_VAR_LOCATION: UK South
  TF_VAR_VSTS_POOL_PREFIX: UKHO

pool:
  vmImage: 'ubuntu-latest'
container: ant59/terraform-azure-make:latest
steps:
- bash: terraform -v
  displayName: 'terraform version'
- task: AzureCLI@1
  inputs:
    azureSubscription: 'AzDo Live'
    scriptLocation: 'scriptPath'
    scriptPath: 'tfplan.sh'
  env:
   TF_VAR_BRANCH: $(Build.SourceBranchName)  
   TF_VAR_VSTS_ACCOUNT: $(TF_VAR_VSTS_ACCOUNT)
   TF_VAR_VSTS_TOKEN: $(TF_VAR_VSTS_TOKEN)
   TF_VAR_SERVERNAMES: $(TF_VAR_SERVERNAMES)
   TF_VAR_ADMIN_USERNAME: $(TF_VAR_ADMIN_USERNAME)
   TF_VAR_ADMIN_PASSWORD: $(TF_VAR_ADMIN_PASSWORD)
   TF_VAR_ADMIN_SSHKEYPATH: $(TF_VAR_ADMIN_SSHKEYPATH)
  displayName: 'initialise, plan and apply'
#- task: AzureCLI@1
#  displayName: restart agents
#  inputs:
#    azureSubscription: 'AzDo Live'
#    scriptLocation: inlineScript
#    inlineScript: |
#      export TF_VAR_RUN_DATE=$(date +%F)
#      RG="m-$TF_VAR_VSTS_ACCOUNT-Agents-$TF_VAR_ENVIRONMENT-$TF_VAR_RUN_DATE-rg"
#      LIST=$(az vm list -g $RG --query "[].name" -o tsv)
#      for OUTPUT in $LIST 
#      do
#        az vm restart -g $RG -n "$OUTPUT"
#      done
#  env:
#   TF_VAR_BRANCH: $(Build.SourceBranchName)  
#   TF_VAR_VSTS_ACCOUNT: $(TF_VAR_VSTS_ACCOUNT)
#   TF_VAR_VSTS_TOKEN: $(TF_VAR_VSTS_TOKEN)
